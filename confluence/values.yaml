# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Can be changed to old api for compatibility reasons: extensions/v1beta1
apiVersion: apps/v1

Replicas: 1
ContainerName: confluence

RBAC:
  Enabled: true

Datacenter:
  Enabled: false

#Â to add certs inside the docker container
Certs:
  Enabled: false
  # The secret below must be created in advance to contain all your certs
  # It will be mounted to the path you specify below inside the container
  # to create the secret, you can use the following command:
  # kubectl create secret generic my-top-secret --from-file=path/to/certs/dir --namespace my-ns
  SecretName: my-top-secret
  MountPath: /var/atlassian/certs/

Image:
  Name: "praqma/confluence"
  Tag: "6.15.4"
  ImagePullPolicy: "Always"
  PrivateRegistry: true
  PullSecret: "docker-hub-credentials"

ContainerPort: 8090
TerminationGracePeriodSeconds: 50

EnvVars:
  X_PROXY_NAME: "confluence.example.com"
  X_PROXY_PORT: "443"
  X_PROXY_SCHEME: "https"
  X_CONTEXT_PATH: ""
  ADDITIONAL_CONNECTOR: "true"
  CATALINA_OPTS: "-Dfile.encoding=UTF-8 -Xms1024m -Xmx1024m"

# livenessProbe:
#   Path:
#   Port:
# ReadinessProbe:
#   Path:
#   Port:

Resources:
  cpuRequest: 1000m
  memoryRequest: 2048Mi
  cpuLimit: 1500m
  memoryLimit: 3072Mi

SecurityContext: 1000


Persistence:
    # define volume claim template.
   VolumeClaimTemplates:
     AccessModes: ReadWriteOnce
     Storage: 20Gi
     StorageClassName: gp2
     Selector:
       Enabled: false
       MatchLabels: {}
         # foo: foo
         # bar: bar

   # datacenter volume -- Needs Datacenter.Enabled to be set to true or else it would be ignored.
   DatacenterExistingClaimName: ""
   DatacenterMountPath: /var/atlassian/confluence-datacenter/
   DatacenterVolumeClaimTemplates:
     AccessModes: ReadWriteMany
     Storage: 20Gi
     StorageClassName: gp2
     Selector:
       Enabled: false
       MatchLabels: {}
         # foo: foo
         # bar: bar

Service:
  Type: ClusterIP
  Port: 8090
  Protocol: TCP
  Annotations:
    traefik.backend.loadbalancer.sticky: "true"

Ingress:
  Enabled: true
  Host: confluence.example.com
  ServicePort: 8090
  # Annotations:
  #   - key: value
  # Optional: Define a path to use in the ingress
  Path: /confluence

PodDisruption:
  Enabled: false
  MinAvailable: 1

PrometheusMetrics:
  Enabled: false
  Path: /plugins/servlet/prometheus/metrics

# list of plugins (plugin IDs) to be pre-installed
PluginIds: []
  # - ru.andreymarkelov.atlas.plugins.prom-confluence-exporter

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
#
nodeSelector: {}
  # Don't forget to remove the brackets above if you want to use a selector.
  # disktype: ssd
  # size: large

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# Don't forget to remove the brackets above if you want to use tolerations.
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
  # Don't forget to remove the brackets above if you want to use affinity.
  # podAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #         - key: security
  #           operator: In
  #           values:
  #           - S1
  #       topologyKey: failure-domain.beta.kubernetes.io/zone
  #   podAntiAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 100
  #       podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: security
  #             operator: In
  #             values:
  #             - S2
  #         topologyKey: kubernetes.io/hostname
